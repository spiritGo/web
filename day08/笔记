笔记

1. 运算符
	
	算数运算符 比较运算符 逻辑运算符 位运算符
	（1）赋值运算符
		= += -= *= /= %=
		练习：声明变量保存商品的价格为20，计算打八折的结果
		var price = 20;
		price *= 0.8;
		练习：假如本金10000.存款利率3.5%，计算一年的利息是多少
		var money = 10000;
		money*=0.035;

	（2）三目运算符
		需要有是三个数据或表达式
		一个条件有两种结果
		条件表达式 ? 表达式1：表达式2；
		如果表达式为true，执行表达式1
		如果表达式为false，执行表达式2

	 	练习：声明两个变量，分别保存数字；比较两个数字，打印最大值

	 	var a =5 ,b =6;
	 	a > b ? console.log("最大值为：a="+a):console.log("最大值为：b="+b);

	 	练习：声明两个变量，分别保存用户名和密码，如果用户名是root，并且面膜是123456，打印：‘登录成功’，否则打印"登录失败"

	 	var uname = "root";
	 	var pwd = "123456";
	 	uname =="root" && pwd == "1234560" ? console.log("登录成功"):console.log("登录失败");


2. 浏览器端函数
	alert();	弹出警示框（消息框）
	prompt();	弹出提示框（输入框），需要使用变量来接受输入的值，数据类型是字符串

3. 流程控制
	程序=数据+算法

	程序的执行方式分为顺序执行、选择执行、循环执行。
	（1）if语句

		语句一
		if(条件表达式){
			语句二
		}
		语句三

		注意：如果if后的大括号中只有一个行语句，大括号是可以省略的。
		
		在if语句中的条件表达式中有些默认值false：undefined，0，null，NaN，"";

		练习：声明变量保存个人签名，如果签名为空，打印”这家伙很懒，什么也没留下‘有签名就正常打印
		str=""
		if(!str){
			console.log("这家伙很懒，什么也没留下");
		}console.log(str);

	（2）if-else语句
		语句一
		if(条件表达式){
			语句二
		}else{
			语句三
		}

		练习：使用弹出提示框分别输入商品的单价和数量，如果总价满500打八折，如果余额为1000，如果余额大于等于总价，打印支付成功，否则，打印余额不足

		07_exercise.html	07_exercise.js

		var price = prompt("请输入单价");
		var count = prompt("请输入数量");
		var total = price*count;
		var card = 1000;
		if(total >= 500){
			total *= 0.8;
		}

		if(card > total){
			console.log("支付成功");
		}else{
			console.log("余额不足");
		}

	（3）if-else嵌套
		语句0
		if(条件表达式1){
			语句1
		}else if(条件表达式2){
			语句2
		}else... if(条件表达式n){
			语句n
		}else{
			语句n+1
		}

		练习：根据订单的状态码来打印订单状态
		1-等待付款 2-等待发货 3-运输中 4-已签收 5-已取消 其他-无法追踪
		var status = 1;
		if(status==1){
			console.log("等待付款");
		}else if(status==2){
			console.log("等待发货");
		}else if(status==3){
			console.log("运输中");
		}else if(status==4){
			console.log("已签收");
		}else if(status==5){
			console.log("已取消");
		}else{
			console.log("无法追踪");
		}

3.switch-case
	是一种特殊的多项分支语句，可以根据一个表达式值，来执行不同的语句
	语句0;
	switch(表达式){
		case:
			语句1
			break;//阻止程序继续往后执行其他语句
		case:
			语句2
			break;
		   ...
		default:
			语句n+1;

	}

	注意：在case中，表达式和值比较的时候使用的是全等于（===），要求值和类型同事满足结果是true
	对比if-else嵌套和switch-case语句
	相同点：两者都可以用于多项分支语句。
	不同点：if-else既可以判断相等或者不相等的情况，使用范围更广；
	switch-case只能用于全等于的比较，结构更为清晰，执行效率相对较高。


4.循环执行
	循环：就是一遍又一遍的执行相同或者相似的代码
	循环的两个要素：
		循环条件：控制循环的次数
		循环体：执行的相同或相似代码
	（1）while循环

		+--------------------------------------
		| while(循环条件){//是一个布尔型的值
		| 	 循环体
		| }
		+------------------------------------------

		var times = 0;
		while(times<10){
			console.log("hello");
		}

课后任务：
（1）整理思维导图
（2）练习：
	使用switch-case判断一个人的成绩标准
	使用while循环打印1~100之间的奇数
	使用1~100之间奇数所有整数的和
（3）预习
	
	var score = 28;
	score/=10;
	console.log();
	switch(score){
		case 10:
		case 9:
		case 8:
		case 7:
		case 6:
		default:
			console.log();

	}

	在整数中，不能被2整除的数叫做奇数。日常生活中，人们通常把奇数叫做单数，它跟偶数是相对的。 [1]  奇数可以分为正奇数和负奇数。奇数的数学表达形式为：  2k+1(k!=0)

	var i=0;
	while(i<=100){
		if(i%2==1){
			console.log(i);
		}
		i++;
	}

	7
	2
	---
	1

	使用1~100之间所有整数的和

	var i=0;
	var sum=0;
	while(i<=100){
		//if(i%2!=0){
			sum+=i;//sum=sum+i;
		//}
		i++;
	}

	i=0
	s=0

	i=1
	s=0 -> s=0+1

	i=2
	s=1 ->s=1+2

	i=3
	s=3 ->s=3+3

	i=4 
	s=6 ->s=6+4

	i=5
	s=10 ->s=10+5

	console.log(sum);


笔记

mysql.exe -h127.0.0.1 -P3306 -uroot -p
+-------------------+
|					|
+-------------------+

1. 标准SQL语句的分类
	（1）DDL:data define language定义数据
	drop / create / alter

	（2）DML:data munipulate language 操作数据
	insert / delete / update

	（3）DQL:data query language 查询数据
	select

	（4）DCL:data control language 控制用户权限
	grant（授权） / revoke（收权）

2.数据库中的中文乱码
	（1）计算机存储英文字符
	ASCII：总共有128个，对所有的英文字符及其标点符号进行了编码
	latin-1：总共256个，兼容ASCII，同时对欧洲符号进行了编码。mysql默认使用这种编码存储数据

	（2）计算机存储中文字符
	gb2312：对6000多常用的汉字进行了编码，兼容ASCII码
	gbk：对20000汉字进行了编码，兼容ASCII码
	BIG5：台湾繁体字编码，兼容ASCII码，不兼容gbk，gb2312
	Unicode：对世界上主流国家的语言进行了编码，兼容ASCII码，不兼容gb系列，big5等。具体分为
	utf-8、utf-16、utf-32三种存储方案。

	（3）解决MySQL数据库中乱码
	在整个脚本的最上方设置客户端连接服务端使用的编码为utf-8：set names utf8;
	创建数据库，设置存储的编码utf-8：create database xz charset=utf8;
	在脚本上使用查询的操作还是会乱码，使用命令行的方式查询不显示乱码；

3.列类型	1TB->GB->MB->byte(字节)->bit(比特)
	创建数据库表时，设置指定的列存储的数据类型
	create table news(nid 列类型);
	（1）数值类型
	TINYINT 微整形，占一个字节 范围-128~127
	SMALLINT 小整形 占两个字节 范围-32768~32767
	INT 整形 占4个字节 范围-2147483648~2147483647
	BIGINT 大整形 占8个字节 范围非常大，大到懒的写

	FLOAT 单精度浮点型，占4个字节，范围3.4e38比INT 的范围大的多，可能产生误差
	DOUBLE 双精度浮点型，占8个字节，范围比BIGINT大的多
	DECIMAL(M,D) 定点小数，不会产生误差，M代表总的有效位数 D代表小数点后的有效位数
	BOOL 布尔型，只有两个值TRUE/FALSE(不能使用引号),或者1/0，真正存储的时候会用TINYINT类型
	存储值为1/0

	（2）日期时间类型
	DATE 日期类型 '2018-12-31'
	TIME 时间类型 '14:30:20'
	DATETIME 日期时间类型 '2018-12-31 14:30:20'

	（3）字符串类型
	VARCHAR(M) 变长字符串 不会产生空间浪费，操作速度相对较慢，M的最大值为65535
	CHAR(M) 定长字符串 会产生空间浪费，操作速度相对较快，M的最大值为255，用于存储手机号..
	TEXT 最多存储2G

	注：数据库名可以以sq结尾

4. 列约束
	MySQL可以对插入的数据进行特定的验证，只有满足条件才允许插入到数据库当中，否则被认为是非法的插入
	例如：一个人的性别只能是男或者是女，一个人的年龄0~100之间

	（1）主键约束-primary key
		声明了主键列上的值不能出现重复，表中查询的记录会按照主键由小到大排序-> 加快查找速度；通常主键添加在编号列中，不能使用null
		注意：一个表中只能出现一个主键

		程序中null的含义：空的，空缺的，指应该有某个数据，暂时没有确定具体的值
		例如：一个刚刚入职的员工无法确定他的部门，未确定部门经理

	（2）唯一约束-unique
		声明了唯一约束的列上不能插入重复的值，但允许插入null，而且允许多次插入null
		说明：null和任何值都不相等，甚至两个null都不相等

练习：
编写脚本xz.sql
表笔记本家族laptop_family(fid,fname,laptopCount)
10 联想 2 
20 戴尔 2
30 苹果 1
创建表laptop（lid,title,price,spedc规格,datail详细介绍,shelfTime上架时间,family_id所属家族编号）
插入5条记录
笔记

1.简单查询-模糊条件查询
	实例：查询出姓名含有字母e员工的所有信息
	select * from emp where ename like '%e%';	%表示任意个字符

	实例：查询出姓名以e结尾的员工的所有信息
	select * from emp where ename like '%e';

	练习：查询姓名中倒数第二个字符为e的员工的所有信息
	select * from emp where ename like '%e_'; 	_表示任意一个字符

	+----------------------------------------------------------+
	| SQL中提供了两个模糊查询的字符                            |
	| %	  匹配任意多个字符	>=0                                | 
	| _   匹配任意 1个字符	 =1                                |
	| 注意：以上两个匹配不能使用符号（=），必须使用like关键字  |
	+----------------------------------------------------------+

2. 复杂查询
	（1）聚合查询/分组查询
		练习：查询出所有员工的数量
		select count(eid) from emp;

		函数：是一个功能体，提供若干个数据，产出特定结果。
		mysql提供的聚合函数
		count(...)/sum(...)/avg(...)/max(...)/min(...)

		练习：使用员工的姓名列查询员工的数量
		select count(ename) from emp;

		练习：使用员工部门编号列查询员工数量
		select count(deptId) from emp;
		推荐::select count(*) from emp;		#推荐

		练习：查询所有员工的工资总和
		select sum(salary) from emp;

		练习：查询出男员工的平均工资
		select avg(salary) from emp where sex=1;
		select sum(salary)/count(*) from emp where sex=1;

		练习：查询出女员工的平均工资
		select avg(salary) from emp where sex=0;
		select sum(salary)/count(*) from emp where sex=0;

		练习：查询工资最高
		select max(salary) from emp;

		练习：查询工资最低
		select min(salary) from emp;

		练习：查询工资最低并显示姓名，工资，工号
		select ename,salary,eid from emp where salary = (select min(salary) from emp);
		select ename,salary,eid from emp order by salary limit 0,1;

		练习：查询出年龄最大的员工的生日
		select min(birthday) as 生日 from emp;

		分组查询
		练习：查询出每个部门的员工数量
		select deptId,count(*) from emp group by deptId;

		练习：查询出男女员工的平均工资、最高工资、最低工资
		select sex,avg(salary),max(salary),min(salary) from emp group by sex;

		练习：查询出1991年出生的员工的所有信息
		select * from emp where year(birthday)=1991; 

		+---------------------------+
		| year()  获取日期中的年份  |
		| month() 获取日期中的月份  | 
		+---------------------------+

		练习：查询出3月份出生的所有员工的信息
		select * from emp where month(birthday) = 3;

	（2）子查询
		练习：查询出研发部员工所有的信息
		select * from emp where deptId = (select did from dept where dname="研发部");

		练习：查询出比Tom工资高的员工的所有信息
		select * from emp where salary > (select salary from emp where ename="tom");

		+-----------------------------------------------------------------+
		| 总结：子查询就是把一个SQL语句的查询结果作为另一个SQL语句的条件  |
		+-----------------------------------------------------------------+

		练习：查询出和Tom同一年出生的员工所有信息
		select * from emp where year(birthday) = (select year(birthday) from emp where ename="tom");

	（3）多表查询/跨表查询
		练习：查询出所有的员工姓名及其部门名称
		select ename,dname from emp,dept;	错误：产生笛卡尔积
		如何避免笛卡尔积，添加查询条件

		欠揍版: select ename,dname from emp,dept where deptId=did;   老板说怎么没他
		上述查询的语法是SQL-92中的，无法查询出没有部门的员工，也无法查询出没有员工的部门
		SQL-99中提出新的多表查询的方法

		内连接：inner join ... on 和之前的查询结果一样
		select ename,dname from emp inner join dept on deptId = did;

		左外连接 left outer join ... on	显示左侧表中所有的记录 - outer可以省略
		select ename,dname from emp left outer join dept on deptId=did;

		右外连接 right outer join ... on  显示右侧表中所有的记录
		select ename,dname from emp right outer join dept on deptId=did;

		全连接 full join	显示左侧和右侧所有的记录-但mysql不支持

		union（合并相同的记录）
		union all（不合并相同的记录）
		(select ename from emp_cn)
		union
		(select ename from emp_us);

------------------------------javascript::javascript-----------------------------

学习一门编程语言的步骤
	（1）了解背景知识：历史、现状、特点、应用场景
	（2）搭建开发环境，编写hello world
	（3）变量和常量
	（4）数据类型
	（5）运算符
	（6）逻辑结构
	（7）通用小程序
	（8）函数和对象
	（9）第三方的库、框架
	（10）实用的项目

1.js概述
	（1）js历史
		1995年，js最早出现在netscape的浏览器中
		1997年，js的第一个标准ecma-262
		2009年，js遵循了CommonJS规范，开始向服务器端发展
	（2）现状
		既可以运行在客户端浏览器，也可以运行在服务器端
	（3）特点
		编译执行，编译一行执行一行
		弱解释性语言
		基于对象
		跨平台
	（4）应用领域
		用于开发浏览器端的交互效果
		用于创建web服务器，操作数据库等服务器相关内容

2.js的执行环境
	（1）浏览器自带的js解释器
		创建01.js、01.html、把01.js嵌入到01.html中
		<script src='01.js'></script>

	（2）nodejs下的js解释器
		下载网址：nodejs.org
		查看安装的版本 node -v
		使用nodejs执行js文件
		node 路径

3.js语法规范
	（1）区分大小写
	（2）每行代码结尾的分号可加可不加，提倡都加
	（3）分为单行注释（//...）和多行注释（/**/）

4.变量
	变量就是用于存储数据的容器

	（1）声明变量
		使用var关键字，例如 var enamel = "tom";

	（2）变量的命名规则
		变量名称可以使用字母、数字、下滑线、美元符号组成；不能以数字开头
	*	推荐   emp_name 	empName驼峰命名法
		多个英文连词使用下滑线命名或者驼峰命名的方式
		不能使用关键字、保留字作为变量名称

	（3）一次性声明多个变量
		var a,b,c,d,e,f,g;
		练习：一次性声明多个变量，分别保存语文、数学、总成绩
		var chinese = 120,math=135,english=126;
		console.log(chinese,math,english);

	（4）变量的注意
		var a;
		声明了变量未赋值，此时的值为undefined
		使用了未声明的变量会报错

	（5）常量
		一旦声明据无法重新赋值
		const(英文constant)

		练习：声明常量，分别保存春节，端午节，中秋节
		const SPRING = "2019-1-1",DBF = "2019-5-5",MOOM = "2019-8-25";
		console.log(SPRING,DBF,MOOM);

课后任务：
	（1）复习今天的内容，整理思维导图
	（2）练习：
		声明变量来保存园的半径，声明常量保存圆周率，使用常量保存圆的面积和周长
		使用变量保存商品的单价为15，数量5，单价18，数量是20，计算商品的总价
	（3）创建学子商城数据库，准备自己作品的数据库
	预习js中的数据类型和数据类型转换
	var r = 12;
	const PI = 3.14;
	const S = r*PI*r,C=PI*2*r;

	var sale =15,count = 5;
	var total =sale*count;
	sale =18,count = 20;
	total = sale*count;





